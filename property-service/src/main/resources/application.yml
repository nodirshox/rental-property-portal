spring:
  redis:
    cluster:
      nodes: ${PROPERTY_SERVICE_REDIS_HOST}:${PROPERTY_SERVICE_REDIS_PORT}
  kafka:
    bootstrap-servers: ${PROPERTY_SERVICE_KAFKA_HOST}:${PROPERTY_SERVICE_KAFKA_PORT}
  data:
    mongodb:
      uri: mongodb://${PROPERTY_SERVICE_MONGO_USER}:${PROPERTY_SERVICE_MONGO_PASSWORD}@${PROPERTY_SERVICE_MONGO_HOST}/${PROPERTY_SERVICE_MONGO_DATABASE}
      database: ${PROPERTY_SERVICE_MONGO_DATABASE}
      authentication-database: ${PROPERTY_SERVICE_MONGO_DATABASE}

config:
  redis:
    host: ${PROPERTY_SERVICE_REDIS_HOST}
    port: ${PROPERTY_SERVICE_REDIS_PORT}
    password: ${PROPERTY_SERVICE_REDIS_PASSWORD}
  user-service:
    host: ${USER_SERVICE_HOST}
    port: ${USER_SERVICE_PORT}
    key: ${USER_SERVICE_KEY}
  topic:
    create-property: "create-property"
    update-property-status: "update-property-status-topic"
    send-email: "send-email-topic"

aws:
  zone: us-east-1
  s3:
    access_key: ${AWS_S3_ACCESS_KEY}
    secret_key: ${AWS_S3_SECRET_KEY}

server:
  port: 8002
  error:
    include-message: always
    include-binding-errors: always
